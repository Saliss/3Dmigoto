// interior light shaft volume

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer SRenderStateParameterProvider : register(b1)
{
  float4 _AlphaValues : packoffset(c0);
}

cbuffer CSceneParticleEmitterRenderer_CShaderParameterProvider : register(b2)
{
  float4 _AlphaFadeParams : packoffset(c0);
  float4 _DebugColor : packoffset(c1);
  float4 _EmissiveColor : packoffset(c2);
  float4 _FarSoftDistanceRange_oneOverSoftRange : packoffset(c3);
  float4 _NearFadeDistanceParams : packoffset(c4);
  float4 _SHCoeffB : packoffset(c5);
  float4 _SHCoeffG : packoffset(c6);
  float4 _SHCoeffR : packoffset(c7);
  float4 _SHNodeB : packoffset(c8);
  float4 _SHNodeG : packoffset(c9);
  float4 _SHNodeR : packoffset(c10);
  float4 _SoftClipPlane : packoffset(c11);
  float4 _UniformFog : packoffset(c12);
  float2 _UVNormalScale : packoffset(c13);
  float3 _EmitterWorldPos : packoffset(c14);
}
SamplerState DepthVPSampler__SampObj___s : register(s0);
SamplerState DiffuseSampler0__SampObj___s : register(s1);
Texture2D<float4> DepthVPSampler__TexObj__ : register(t0);
//Texture2DMS<float4,2> DepthVPSampler_TextureObject : register(t0);
Texture2D<float4> DiffuseSampler0__TexObj__ : register(t1);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

Texture2D<float4> InjectedDepthTexture : register(t126);
//Texture2DMS<float4,2> InjectedDepthTexture : register(t126);

void main(
float4 injectedScreenPos : SV_Position,
  float4 v0 : SV_Position0,
  float v1 : SV_ClipDistance0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float4 v5 : TEXCOORD3,
  float3 v6 : TEXCOORD4,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
//float4 zpos4 = InjectedDepthTexture.Load((int3) injectedScreenPos.xyz);
//float zpos = zpos4.x - 1;
//float wpos = 1.0 / zpos;
  float4 r0,r1;
  uint4 bitmask;
  r0.xy = v5.xy / v5.zz;
  r0.xyzw = DepthVPSampler__TexObj__.SampleLevel(DepthVPSampler__SampObj___s, r0.xy, 0.000000000e+000).xyzw;

//float4 tmp;
//DepthVPSampler_TextureObject.GetDimensions(tmp.x,tmp.y, bitmask.x);
//tmp.xy = int2(tmp.xy * r0.xy);
//r0.x = DepthVPSampler_TextureObject.Load(tmp.xy,0).x;

  //r0.xyzw = InjectedDepthTexture.SampleLevel(DepthVPSampler__SampObj___s, r0.xy, 0.000000000e+000).xyzw;
//  r0.x = InjectedDepthTexture.Load(r0.xy, 0).x;
//r0.x = InjectedDepthTexture.Load((int3)injectedScreenPos.xyz,0).x;
//r0.x = DepthVPSampler__TexObj__.Load((int3)injectedScreenPos.xyz,0).x;

//o0.xyz = r0.x * 8; o0.w = 1; return;
//o0.xyz = zpos4.x * 8; o0.w = 1; return;

  r0.x = _DepthScale.y * r0.x + _DepthScale.x;
  r0.x = 1.000000e+000 / r0.x;
  r0.x = -v6.z + r0.x;
  r0.y = -_FarSoftDistanceRange_oneOverSoftRange.x + r0.x;
  r0.xy = saturate(_FarSoftDistanceRange_oneOverSoftRange.zy * r0.xy);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.x = r0.x * r0.y;
  r1.xyzw = DiffuseSampler0__TexObj__.Sample(DiffuseSampler0__SampObj___s, v6.xy).xyzw;
  r0.y = r1.x + -r1.w;
  r0.y = _AlphaFadeParams.y * r0.y + r1.w;
  r1.xyz = v3.xyz * r1.xyz;
  r1.xyz = v2.www * r1.xyz;
  r1.xyz = _BloomAdaptationFactor.zzz * r1.xyz;
  r0.y = v3.w * r0.y;
  r0.z = v5.w * v4.w;
  r0.y = r0.y * r0.z;
  r0.x = r0.y * r0.x;
  r0.x = saturate(_AlphaFadeParams.w * r0.x);
  r0.y = -_AlphaValues.x + r0.x;
  o0.xyz = r1.xyz * r0.xxx;
  r0.x = r0.y < 0.000000000e+000;
  if (r0.x != 0) discard;
  o0.w = 0.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer SRenderStateParameterProvider
// {
//
//   float4 _AlphaValues;               // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneParticleEmitterRenderer_CShaderParameterProvider
// {
//
//   float4 _AlphaFadeParams;           // Offset:    0 Size:    16
//   float4 _DebugColor;                // Offset:   16 Size:    16 [unused]
//   float4 _EmissiveColor;             // Offset:   32 Size:    16 [unused]
//   float4 _FarSoftDistanceRange_oneOverSoftRange;// Offset:   48 Size:    16
//   float4 _NearFadeDistanceParams;    // Offset:   64 Size:    16 [unused]
//   float4 _SHCoeffB;                  // Offset:   80 Size:    16 [unused]
//   float4 _SHCoeffG;                  // Offset:   96 Size:    16 [unused]
//   float4 _SHCoeffR;                  // Offset:  112 Size:    16 [unused]
//   float4 _SHNodeB;                   // Offset:  128 Size:    16 [unused]
//   float4 _SHNodeG;                   // Offset:  144 Size:    16 [unused]
//   float4 _SHNodeR;                   // Offset:  160 Size:    16 [unused]
//   float4 _SoftClipPlane;             // Offset:  176 Size:    16 [unused]
//   float4 _UniformFog;                // Offset:  192 Size:    16 [unused]
//   float2 _UVNormalScale;             // Offset:  208 Size:     8 [unused]
//   float3 _EmitterWorldPos;           // Offset:  224 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj__         sampler      NA          NA    0        1
// DiffuseSampler0__SampObj__        sampler      NA          NA    1        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// DiffuseSampler0__TexObj__         texture  float4          2d    1        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// SRenderStateParameterProvider     cbuffer      NA          NA    1        1
// CSceneParticleEmitterRenderer_CShaderParameterProvider    cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// SV_ClipDistance          0   x           1  CLIPDST   float       
// TEXCOORD                 0   xyzw        2     NONE   float      w
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float      w
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear centroid v2.w
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 2
div r0.xy, v5.xyxx, v5.zzzz
sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.x, cb0[14].y, r0.x, cb0[14].x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v6.z
add r0.y, r0.x, -cb2[3].x
mul_sat r0.xy, r0.xyxx, cb2[3].zyzz
add r0.y, -r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
sample r1.xyzw, v6.xyxx, t1.xyzw, s1
add r0.y, -r1.w, r1.x
mad r0.y, cb2[0].y, r0.y, r1.w
mul r1.xyz, r1.xyzx, v3.xyzx
mul r1.xyz, r1.xyzx, v2.wwww
mul r1.xyz, r1.xyzx, cb0[2].zzzz
mul r0.y, r0.y, v3.w
mul r0.z, v4.w, v5.w
mul r0.y, r0.z, r0.y
mul r0.x, r0.x, r0.y
mul_sat r0.x, r0.x, cb2[0].w
add r0.y, r0.x, -cb1[0].x
mul o0.xyz, r0.xxxx, r1.xyzx
lt r0.x, r0.y, l(0.000000)
discard_nz r0.x
mov o0.w, l(0)
ret 
// Approximately 26 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer SRenderStateParameterProvider
// {
//
//   float4 _AlphaValues;               // Offset:    0 Size:    16
//
// }
//
// cbuffer CSceneParticleEmitterRenderer_CShaderParameterProvider
// {
//
//   float4 _AlphaFadeParams;           // Offset:    0 Size:    16
//   float4 _DebugColor;                // Offset:   16 Size:    16 [unused]
//   float4 _EmissiveColor;             // Offset:   32 Size:    16 [unused]
//   float4 _FarSoftDistanceRange_oneOverSoftRange;// Offset:   48 Size:    16
//   float4 _NearFadeDistanceParams;    // Offset:   64 Size:    16 [unused]
//   float4 _SHCoeffB;                  // Offset:   80 Size:    16 [unused]
//   float4 _SHCoeffG;                  // Offset:   96 Size:    16 [unused]
//   float4 _SHCoeffR;                  // Offset:  112 Size:    16 [unused]
//   float4 _SHNodeB;                   // Offset:  128 Size:    16 [unused]
//   float4 _SHNodeG;                   // Offset:  144 Size:    16 [unused]
//   float4 _SHNodeR;                   // Offset:  160 Size:    16 [unused]
//   float4 _SoftClipPlane;             // Offset:  176 Size:    16 [unused]
//   float4 _UniformFog;                // Offset:  192 Size:    16 [unused]
//   float2 _UVNormalScale;             // Offset:  208 Size:     8 [unused]
//   float3 _EmitterWorldPos;           // Offset:  224 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj___s       sampler      NA          NA    0        1
// DiffuseSampler0__SampObj___s      sampler      NA          NA    1        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// DiffuseSampler0__TexObj__         texture  float4          2d    1        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// SRenderStateParameterProvider     cbuffer      NA          NA    1        1
// CSceneParticleEmitterRenderer_CShaderParameterProvider    cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// SV_ClipDistance          0   x           1  CLIPDST   float       
// TEXCOORD                 0   xyzw        2     NONE   float      w
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 2   xyzw        4     NONE   float      w
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 2
div r0.xy, v5.xyxx, v5.zzzz
sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
mad r0.x, cb0[14].y, r0.x, cb0[14].x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v6.z
add r0.y, r0.x, -cb2[3].x
mul_sat r0.xy, r0.xyxx, cb2[3].zyzz
add r0.y, -r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
sample r1.xyzw, v6.xyxx, t1.xyzw, s1
add r0.y, -r1.w, r1.x
mad r0.y, cb2[0].y, r0.y, r1.w
mul r0.y, r0.y, v3.w
mul r0.z, v4.w, v5.w
mul r0.y, r0.z, r0.y
mul r0.x, r0.x, r0.y
mul_sat r0.x, r0.x, cb2[0].w
add r0.y, r0.x, -cb1[0].x
lt r0.y, r0.y, l(0.000000)
discard_nz r0.y
mul r0.yzw, r1.xxyz, v3.xxyz
mul r0.yzw, r0.yyzw, v2.wwww
mul r0.yzw, r0.yyzw, cb0[2].zzzz
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, l(0)
ret 
// Approximately 26 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
